<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sc.mapper.SysLoggongMapper" >
  <resultMap id="BaseResultMap" type="com.sc.entity.SysLoggong" >
    <constructor >
      <idArg column="LID" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="UID" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="IP" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="POWER" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="TIME" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="GONGSIID" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    LID, UID, IP, POWER, TIME, GONGSIID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sc.entity.SysLoggongExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from SYS_LOGGONG
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.math.BigDecimal" >
    select 
    <include refid="Base_Column_List" />
    from SYS_LOGGONG
    where LID = #{lid,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.math.BigDecimal" >
    delete from SYS_LOGGONG
    where LID = #{lid,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.sc.entity.SysLoggongExample" >
    delete from SYS_LOGGONG
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sc.entity.SysLoggong" >
    insert into SYS_LOGGONG (LID, UID, IP, 
      POWER, TIME, GONGSIID
      )
    values (#{lid,jdbcType=DECIMAL}, #{uid,jdbcType=DECIMAL}, #{ip,jdbcType=VARCHAR}, 
      #{power,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, #{gongsiid,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sc.entity.SysLoggong" >
    insert into SYS_LOGGONG
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="lid != null" >
        LID,
      </if>
      <if test="uid != null" >
        "UID",
      </if>
      <if test="ip != null" >
        IP,
      </if>
      <if test="power != null" >
        POWER,
      </if>
      <if test="time != null" >
        TIME,
      </if>
      <if test="gongsiid != null" >
        GONGSIID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="lid != null" >
        #{lid,jdbcType=DECIMAL},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=DECIMAL},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="power != null" >
        #{power,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="gongsiid != null" >
        #{gongsiid,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sc.entity.SysLoggongExample" resultType="java.lang.Integer" >
    select count(*) from SYS_LOGGONG
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update SYS_LOGGONG
    <set >
      <if test="record.lid != null" >
        LID = #{record.lid,jdbcType=DECIMAL},
      </if>
      <if test="record.uid != null" >
        UID = #{record.uid,jdbcType=DECIMAL},
      </if>
      <if test="record.ip != null" >
        IP = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.power != null" >
        POWER = #{record.power,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null" >
        TIME = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gongsiid != null" >
        GONGSIID = #{record.gongsiid,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update SYS_LOGGONG
    set LID = #{record.lid,jdbcType=DECIMAL},
      UID = #{record.uid,jdbcType=DECIMAL},
      IP = #{record.ip,jdbcType=VARCHAR},
      POWER = #{record.power,jdbcType=VARCHAR},
      TIME = #{record.time,jdbcType=TIMESTAMP},
      GONGSIID = #{record.gongsiid,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sc.entity.SysLoggong" >
    update SYS_LOGGONG
    <set >
      <if test="uid != null" >
        UID = #{uid,jdbcType=DECIMAL},
      </if>
      <if test="ip != null" >
        IP = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="power != null" >
        POWER = #{power,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        TIME = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="gongsiid != null" >
        GONGSIID = #{gongsiid,jdbcType=DECIMAL},
      </if>
    </set>
    where LID = #{lid,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sc.entity.SysLoggong" >
    update SYS_LOGGONG
    set UID = #{uid,jdbcType=DECIMAL},
      IP = #{ip,jdbcType=VARCHAR},
      POWER = #{power,jdbcType=VARCHAR},
      TIME = #{time,jdbcType=TIMESTAMP},
      GONGSIID = #{gongsiid,jdbcType=DECIMAL}
    where LID = #{lid,jdbcType=DECIMAL}
  </update>
</mapper>